# Base on a sample Makefile for building Google Test
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make clean  - removes all files generated by make.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ./googletest

# Where to find user code.
USER_DIR_TST = ./unittests
USER_DIR_SRC = ../src
USER_DIR_INCL= ../include
USER_DIR_MOCK= ./unittests/mocks

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include -I$(USER_DIR_INCL)

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = test_runner

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) *.o


# Builds tests.
# A test should link with either gtest.a or gtest_main.a,
# depending on whether it defines its own main() function.

mock_usart.o:
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -I$(USER_DIR_MOCK) -c $(USER_DIR_MOCK)/mock_usart.cpp

uart_handler.o:
	$(CXX) $(CPPFLAGS) -I/usr/local/arm-none-eabi/include -DSTM32F4 $(CXXFLAGS) -c $(USER_DIR_SRC)/uart_handler.cpp

uart_handler_utest.o:
	$(CXX) $(CPPFLAGS) -I/usr/local/arm-none-eabi/include -DSTM32F4 $(CXXFLAGS) -c $(USER_DIR_TST)/uart_handler_utest.cpp

test_runner: mock_usart.o uart_handler_utest.o uart_handler.o
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -L$(GTEST_DIR) $(USER_DIR_TST)/test_runner.cpp mock_usart.o uart_handler_utest.o uart_handler.o -lgtest -lgmock -pthread -o $@

